from Crypto.Util.number import inverse
# RSA modulus and public exponent
N = 16196187720271744126791442764257450710901628763377981586196419116071796260563089330950897818946928904660631374385686667116397489193834993611657924186006389329149729112009286590506093423236568608928403374413667396117641014652177057222360706039926955552049603621494859478187881619196264324307757820688970152848046107265690527264659267258103198705222211327338861863058865409911027728634410494795837415983444860256799112778349768017908712718674779432890189501298335686098902952706504017519616946893870544684969630772894773657373713095751140455036153827734519320130267491595556156805009967710368112746380219199244660743971
e = 65537

# Euler's Totient Function: https://en.wikipedia.org/wiki/Euler%27s_totient_function
tot = 16196187720271744126791442764257450710901628763377981586196419116071796260563089330950897818946928904660631374385686667116397489193834993611657924186006389329149729112009286590506093423236568608928403374413667396117641014652177057222360706039926955552049603621494859478187881619196264324307757820688970152847791453784502071210602723163909671970208144733143647826915239561527491759250755519920261349663345963039684715310314152186140272679392084136970221987024231624074149621913262458149476197720677886313863368543517761757968781024677049200763705780476651828596437899579014274417712117290965332122135170501055409222992

# Ciphertext, can you recover the plaintext?
c = 11945618296449845265781001493365450055525689966109347409177568437609967593764412853291515967971945476905600221015522894486802563018114898276367862556645337989578186906537042600040907162558234947007464938282974522147494883849171290168909447786706352060932333837664624780283448458428655444419106141364104202507463809505084680402601570760231410140943338874385661299424938655296407927743194689689243263672332838501786154852031987413544336644325929780329633402741502193436967857741720941820520410260788470227181763800998189404410339606814330212689214542361487546572669974105579029659868659279546729723541406608967820409102

d = inverse(e,tot)
m = hex(pow(c,d,N)).replace('0x','')
print(bytearray.fromhex(m))


